# Simple Node.js production build
FROM node:20-alpine

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache curl

# Copy package files
COPY package*.json ./

# Install ALL dependencies first (dev + prod for build)
RUN npm ci --timeout=600000

# Copy source code
COPY . .

# Build frontend only
RUN npx vite build

# Clean up dev dependencies, keep only production
RUN npm ci --omit=dev --timeout=600000

# Create simple production server
RUN echo 'import express from "express";\
import { registerRoutes } from "./routes.js";\
import path from "path";\
import { fileURLToPath } from "url";\
\
const __filename = fileURLToPath(import.meta.url);\
const __dirname = path.dirname(__filename);\
const app = express();\
\
app.set("trust proxy", 1);\
app.get("/health", (req, res) => res.json({ status: "ok" }));\
app.get("/ready", (req, res) => res.json({ status: "ready" }));\
app.use(express.static(path.join(__dirname, "dist/public")));\
app.use(express.json());\
\
async function start() {\
  const server = await registerRoutes(app);\
  app.get("*", (req, res) => {\
    res.sendFile(path.join(__dirname, "dist/public/index.html"));\
  });\
  const port = parseInt(process.env.PORT || "5000", 10);\
  server.listen(port, "0.0.0.0", () => {\
    console.log(`Server running on port ${port}`);\
  });\
}\
\
start().catch(console.error);' > server-prod.js

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 --ingroup nodejs nodejs

# Set ownership
RUN chown -R nodejs:nodejs /app

USER nodejs

EXPOSE 5000

HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:5000/health || exit 1

CMD ["node", "server-prod.js"]